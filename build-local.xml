<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="purejavahidapi">
	<tstamp>
		<format property="TODAY_MY" pattern="yyyyMMdd-HHmm" locale="de,DE" />
	</tstamp>
	<property name="dir.maven" value="../../.m2/repository" />
	<property name="dir.jarfile" value="C:/builds/java/purejavahid_VVEIRD/${TODAY_MY}" />
	<property name="dir.jarfile.latest" value="C:/builds/java/purejavahid_VVEIRD/latest" />
	<property name="dir.buildfile" value="." />
	<property name="dir.workspace" value="D:/Nextcloud/Developement/Java/workspace" />
	<property environment="env" />
	<property name="StreamDeckCore.location" value="../StreamDeckCore/StreamDeckCore" />
	<property name="TabletopSoundboard.location" value="../TabletopSoundboard/TabletopSoundboard" />
	<property name="ECLIPSE_HOME" value="../../../../Tools/eclipse/" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<path id="Maven Dependencies.libraryclasspath">
		<pathelement location="../../.m2/repository/net/java/dev/jna/jna/4.0.0/jna-4.0.0.jar" />
	</path>
	<path id="purejavahidapi.classpath">
		<pathelement location="target/classes" />
		<path refid="Maven Dependencies.libraryclasspath" />
	</path>
	<target name="init">
		<mkdir dir="target/classes" />
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="target/classes" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project,create_jar" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<classpath refid="purejavahidapi.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
		<ant antfile="build-local.xml" dir="${StreamDeckCore.location}" inheritAll="false" target="clean" />
		<ant antfile="build-local.xml" dir="${StreamDeckCore.location}" inheritAll="false" target="build">
			<propertyset>
				<propertyref name="build.compiler" />
			</propertyset>
		</ant>
		<ant antfile="build-local.xml" dir="${TabletopSoundboard.location}" inheritAll="false" target="clean" />
		<ant antfile="build-local.xml" dir="${TabletopSoundboard.location}" inheritAll="false" target="build">
			<propertyset>
				<propertyref name="build.compiler" />
			</propertyset>
		</ant>
	</target>
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>
	<target name="create_jar">
		<jar destfile="${dir.jarfile}/purejavahid_VVEIRD.jar">
			<fileset dir="${dir.buildfile}/target/classes" />
		</jar>
		<copy file="${dir.maven}/net/java/dev/jna/jna/4.0.0/jna-4.0.0.jar" todir="${dir.jarfile}" />
		<jar destfile="${dir.jarfile.latest}/purejavahid_VVEIRD.jar">
			<fileset dir="${dir.buildfile}/target/classes" />
		</jar>
		<copy file="${dir.maven}/net/java/dev/jna/jna/4.0.0/jna-4.0.0.jar" todir="${dir.jarfile.latest}" />
	</target>
</project>
